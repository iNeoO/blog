{
  "openapi": "3.1.0",
  "info": {
    "title": "Hono Documentation",
    "description": "Development documentation",
    "version": "0.0.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "postAuthLogin",
        "summary": "Login a user",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email",
                      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                    },
                    "password": {
                      "type": "string",
                      "minLength": 8,
                      "maxLength": 100
                    }
                  },
                  "required": [
                    "email",
                    "password"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "expected": {},
                              "received": {},
                              "minimum": {
                                "type": "number"
                              },
                              "maximum": {
                                "type": "number"
                              },
                              "inclusive": {
                                "type": "boolean"
                              },
                              "multipleOf": {
                                "type": "number"
                              },
                              "unionErrors": {
                                "type": "array",
                                "items": {}
                              }
                            },
                            "required": [
                              "code",
                              "path",
                              "message"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "error",
                    "success"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 100
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "postAuthLogout",
        "summary": "Logout a user",
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "User logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUsers:id",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Retrieve user by ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "admin",
                        "user",
                        "guest"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "role"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "cause": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "stack": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "getUsers",
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Retrieve users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string",
                        "format": "email",
                        "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                      },
                      "role": {
                        "type": "string",
                        "enum": [
                          "admin",
                          "user",
                          "guest"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "email",
                      "role"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postUsers",
        "tags": [
          "Users"
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "admin",
                        "user",
                        "guest"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "role"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "issues": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "anyOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "number"
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string"
                              },
                              "expected": {},
                              "received": {},
                              "minimum": {
                                "type": "number"
                              },
                              "maximum": {
                                "type": "number"
                              },
                              "inclusive": {
                                "type": "boolean"
                              },
                              "multipleOf": {
                                "type": "number"
                              },
                              "unionErrors": {
                                "type": "array",
                                "items": {}
                              }
                            },
                            "required": [
                              "code",
                              "path",
                              "message"
                            ]
                          }
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "issues",
                        "name"
                      ]
                    },
                    "success": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "error",
                    "success"
                  ]
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "format": "email",
                    "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        }
      }
    },
    "/profile/me": {
      "get": {
        "operationId": "getProfileMe",
        "tags": [
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "Retrieve users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "pattern": "^(?!\\.)(?!.*\\.\\.)([A-Za-z0-9_'+\\-\\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\\-]*\\.)+[A-Za-z]{2,}$"
                    },
                    "role": {
                      "type": "string",
                      "enum": [
                        "admin",
                        "user",
                        "guest"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "role"
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "cause": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "stack": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {}
}